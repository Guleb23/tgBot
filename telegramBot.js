
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const BOT_TOKEN = '7593576707: AAFfwzMnHc6eUpyrZVrWhJokJg_NdK4LcQs';

const bot = new TelegramBot(BOT_TOKEN, { polling: true });

bot.onText(/\/start/, (msg) => {
    const opts = {
        reply_markup: {
            keyboard: [
                [{ text: 'üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact: true }]
            ],
            resize_keyboard: true,
            one_time_keyboard: true
        }
    };

    bot.sendMessage(msg.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', opts);
});

bot.on('contact', async (msg) => {
    const phoneNumber = msg.contact.phone_number;
    const userId = msg.contact.user_id;
    const firstName = msg.contact.first_name;

    console.log(`üì± –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phoneNumber}`);

    try {
        const response = await axios.post('https://guleb23-webapplication2-c213.twc1.net/auth/phone', {
            userId,
            phoneNumber,
            firstName
        });

        if (response.data.success) {
            bot.sendMessage(msg.chat.id, `‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.`);
        } else {
            bot.sendMessage(msg.chat.id, `‚ùå –û—à–∏–±–∫–∞: ${response.data.message}`);
        }
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:`, error);
        bot.sendMessage(msg.chat.id, `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.`);
    }
});

console.log('üöÄ Telegram Bot –∑–∞–ø—É—â–µ–Ω...');

